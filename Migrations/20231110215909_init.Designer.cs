// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SchoolDance.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231110215909_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("fullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("isMale")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("login")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("position")
                        .HasColumnType("longtext");

                    b.Property<int>("workExperienceMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("administrators");
                });

            modelBuilder.Entity("Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DanceStyleId")
                        .HasColumnType("longtext");

                    b.Property<string>("className")
                        .HasColumnType("longtext");

                    b.Property<int>("coachId")
                        .HasColumnType("int");

                    b.Property<int>("danceHallId")
                        .HasColumnType("int");

                    b.Property<int>("groupId")
                        .HasColumnType("int");

                    b.Property<string>("weekdays")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("danceStylesId")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("fullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("isMale")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("login")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("position")
                        .HasColumnType("longtext");

                    b.Property<int>("workExperienceMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("coaches");
                });

            modelBuilder.Entity("DanceHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<int>("roomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("danceHalls");
                });

            modelBuilder.Entity("DanceStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("danceStyles");
                });

            modelBuilder.Entity("Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("maxNumberStudent")
                        .HasColumnType("int");

                    b.Property<string>("nameGroup")
                        .HasColumnType("longtext");

                    b.Property<string>("studentId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("endDatePayment")
                        .HasColumnType("date");

                    b.Property<DateTime>("paymentTime")
                        .HasColumnType("datetime");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("fullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("isMale")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("login")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("SupportMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("isSolved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("message")
                        .HasColumnType("longtext");

                    b.Property<int>("personId")
                        .HasColumnType("int");

                    b.Property<string>("typeMessage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("supportMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
